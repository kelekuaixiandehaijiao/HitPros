{%- assign search_sort_by = search.sort_by | default: search.default_sort_by -%}
{%- assign active_filters_count = 0 -%}

{%- for filter in search.filters -%}
  {%- if filter.type == 'list' -%}
    {%- assign active_filters_count = active_filters_count | plus: filter.active_values.size -%}
  {%- elsif filter.type == 'price_range' and filter.min_value.value or filter.max_value.value -%}
    {%- assign active_filters_count = active_filters_count | plus: 1 -%}
  {%- endif -%}
{%- endfor -%}
{{ 'aside-filter-reset.css' | asset_url | stylesheet_tag }}
{{ 'index-product-item.css' | asset_url | stylesheet_tag }}
{{ 'index-product-item-swiper.css' | asset_url | stylesheet_tag }}
{{ 'main-search.css' | asset_url | stylesheet_tag }}

<section>
  {%- if search.performed -%}
    {%- assign first_matching_type = search.results.first.object_type -%}
    {%- capture label -%}
      {%- case first_matching_type -%}
        {%- when 'product' -%}
          {{ 'search.general.products' | t }} ({{ search.results_count }})
        {%- when 'article' -%}
          {{ 'search.general.articles' | t }} ({{ search.results_count }})
        {%- when 'page' -%}
          {{ 'search.general.pages' | t }} ({{ search.results_count }})
      {%- endcase -%}
    {%- endcapture -%}
    <div class="container">
      {%- if search.results_count > 0 or search.filters != empty -%}
        {%- capture search_mode -%}{% if settings.search_enable_products %},product{% endif %}{% if settings.search_enable_blog_posts %},article{% endif %}{% if settings.search_enable_pages %},page{% endif %}{%- endcapture -%}
        <search-page
          section-id="{{ section.id }}"
          terms="{{ search.terms | escape }}"
          complete-for="{{ search_mode | remove_first: ',' | remove: first_matching_type | split: ',' | json | escape }}"
          class="main-search__results"
        >
          <div class="result-text">Showing Results For {{ 'search.general.terms' | t: terms: search.terms }}</div>
          <div class="result-num">({{ search.results_count }} products)</div>
          <div
            id="search-{{ section.id }}-{{ first_matching_type }}"
            class="main-search__category-result"
            data-label="{{ label | escape }}"
          >
            {%- paginate search.results by section.settings.products_per_page -%}
              {%- assign filtered_results = search.results | where: 'object_type', first_matching_type -%}
              {%- if first_matching_type == 'product' -%}
                <product-search-facet section-id="{{ section.id }}" class="product-facet">
                  {%- if section.settings.show_filters and search.filters != empty -%}
                    {%- if section.settings.filter_position == 'always_visible' -%}
                      <div class="product-facet__aside">
                        <safe-sticky offset="30" class="product-facet__aside-inner">
                          <div class="product-facet__filters-header hidden-pocket">
                            <p class="heading {% if settings.heading_text_transform == 'uppercase' %}h6{% else %}h5{% endif %}">
                              {{ 'collection.general.filters' | t }}
                            </p>
                          </div>

                          {%- render 'facet-filters',
                            filters: search.filters,
                            filters_position: section.settings.filter_position
                          -%}
                        </safe-sticky>
                      </div>
                    {%- else -%}
                      {%- render 'facet-filters',
                        filters: search.filters,
                        filters_position: section.settings.filter_position
                      -%}
                    {%- endif -%}
                  {%- endif -%}

                  <div id="facet-main" class="product-facet__main anchor" role="region" aria-live="polite">
                    {%- if filtered_results.size > 0 -%}
                      <div class="product-facet__meta-bar anchor">
                        {%- if section.settings.filter_position == 'drawer'
                          and section.settings.show_filters
                          and search.filters != empty
                        -%}
                          <button
                            type="submit"
                            is="toggle-button"
                            class="product-facet__meta-bar-item product-facet__meta-bar-item--filter hidden-pocket"
                            aria-controls="facet-filters"
                            aria-expanded="false"
                          >
                            {%- render 'icon' with 'filters', inline: true -%}
                            {{- 'collection.general.show_filters' | t -}}
                            {% if active_filters_count > 0 -%}
                              <span class="product-facet__active-count bubble-count">{{ active_filters_count }}</span>
                            {%- endif %}
                          </button>
                        {%- endif -%}

                        <div class="product-facet-radio">
                          <div class="fixed-toolbar">
                            <button
                              is="toggle-button"
                              class="mobile-toolbar__item mobile-toolbar__item--filters {% if active_filters_count > 0 %}has-filters{% endif %}"
                              aria-expanded="false"
                              aria-controls="facet-filters"
                            >
                              {%- render 'icon' with 'filters' -%}
                            </button>
                          </div>
                          {%- if section.settings.show_sort_by -%}
                            <div class="product-facet__meta-bar-item product-facet__meta-bar-item--sort">
                              <span class="product-facet__sort-by-title text--subdued">Sort By:</span>
                              <div class="popover-container my-14">
                                {%- for option in search.sort_options -%}
                                  {%- if option.value == search_sort_by -%}
                                    {%- assign search_sort_by_name = option.name -%}
                                    {%- break -%}
                                  {%- endif -%}
                                {%- endfor -%}

                                <button
                                  type="button"
                                  is="toggle-button"
                                  class="popover-button"
                                  aria-expanded="false"
                                  aria-controls="sort-by-popover"
                                >
                                  <span id="sort-by-selected-value" style="pointer-events: none">
                                    {{- search_sort_by_name -}}
                                  </span>
                                  {%- render 'icon' with 'chevron', inline: true -%}
                                </button>

                                <sort-by-popover id="sort-by-popover" class="popover">
                                  <span class="popover__overlay"></span>

                                  <header class="popover__header">
                                    <span class="popover__title heading h6">
                                      {{- 'collection.general.sort_by' | t -}}
                                    </span>

                                    <button
                                      type="button"
                                      class="popover__close-button tap-area tap-area--large"
                                      data-action="close"
                                      title="{{ 'general.accessibility.close' | t | escape }}"
                                    >
                                      {%- render 'icon' with 'close' -%}
                                    </button>
                                  </header>

                                  <div class="popover__content">
                                    <div class="popover__choice-list">
                                      {%- for sort_option in search.sort_options -%}
                                        <label class="popover__choice-item">
                                          <input
                                            type="radio"
                                            data-bind-value="sort-by-selected-value"
                                            class="visually-hidden"
                                            {% if sort_option.value == search_sort_by %}
                                              checked="checked"
                                            {% endif %}
                                            name="sort_by"
                                            value="{{ sort_option.value }}"
                                            title="{{ sort_option.name }}"
                                          >
                                          <span class="popover__choice-label">{{ sort_option.name }}</span>
                                        </label>
                                      {%- endfor -%}
                                    </div>
                                  </div>
                                </sort-by-popover>
                              </div>
                            </div>
                          {%- endif -%}
                          <div class="viewTab">
                            {% comment %} Catalog {% endcomment %}
                            <div class="viewTab_text ">
                              <span class="listView">
                                {% render 'icon' with 'v3-list' %}
                                List
                              </span>
                              <span class="gridView">
                                {% render 'icon' with 'v3-grid' %}
                                Grid
                              </span>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div class="product-facet__product-list-wrapper product-search-wrapper">
                        <product-list
                          class="product-facet__product-list product-list anchor"
                        >
                          <div class="product-list__inner list-inner">
                            {%- for product in filtered_results -%}
                              {%- render 'index-product-item', product: product -%}
                              {%- render 'index-product-item-swiper', product: product -%}
                            {%- endfor -%}
                          </div>
                        </product-list>
                      </div>
                      {%- render 'pagination', paginate: paginate, use_ajax: true -%}
                    {%- else -%}
                      <div class="empty-state">
                        <h3 class="heading h4">{{ 'collection.general.no_results_title' | t }}</h3>
                        <p>{{ 'collection.general.no_results_label' | t }}</p>

                        <div class="button-wrapper">
                          <a
                            href="{{ routes.search_url }}?sort_by={{ search_sort_by }}&q={{ search.terms | escape }}&type=product&options[prefix]=last&options[unavailable_products]={{ settings.search_unavailable_products }}"
                            data-action="clear-filters"
                            class="button button--primary"
                          >
                            {{- 'collection.general.no_results_button' | t -}}
                          </a>
                        </div>
                      </div>
                    {%- endif -%}
                  </div>
                </product-search-facet>
              {%- endif -%}
            {%- endpaginate -%}
          </div>
        </search-page>
      {%- else -%}
        <div class="search-empty-state">
          <div class="result-tip">No results for {{ 'search.general.terms' | t: terms: search.terms }}</div>
          <div class="following-tips">
            <header>TRY the FOLLOWING:</header>
            <main>
              <ul>
                <li>· Entering a description of the product you are looking for</li>
                <li>· Checking your original search for typos</li>
                <li>· Using a synonym for the product you are looking for</li>
              </ul>
            </main>
          </div>
        </div>
      {%- endif -%}
    </div>
  {%- else -%}
    <div class="container">
      <div class="search-empty-state">
        <div class="result-tip">No results for ""</div>
        <div class="following-tips">
          <header>TRY the FOLLOWING:</header>
          <main>
            <ul>
              <li>· Entering a description of the product you are looking for</li>
              <li>· Checking your original search for typos</li>
              <li>· Using a synonym for the product you are looking for</li>
            </ul>
          </main>
        </div>
      </div>
    </div>
  {% endif %}
</section>
<script>
  (() => {
    let aa = `{%- for product in filtered_results limit:10 -%}{{ product.first_available_variant.sku }}{%- endfor -%}`
    const ip = Cookies.get('ip');
    if(ip) {
      dataLayer.push({
        'event': 'custom_search_performed',
        'zip': '{{ customer.default_address.zip  }}',   
        'username': '{{customer.name }}',
        'email':'{{customer.email }}',
        'search_parameters':'{{ search.terms }}',
        'search_outcome':aa,
        'ip': ip
      });
    }

    //埋点
    let dataLayerForm = null;
    function generateUUID() {
      return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>
        (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)
      );
    }
    const request_id = generateUUID();
  
    const getDataLayerForm = () => {
      const queryString = window.location.search;
      const params = new URLSearchParams(queryString);
      const page = +params.get('page') || 1;
      const keyword = params.get('q');
      const pageSize = {{ section.settings.products_per_page }};
      const sortBy = params.get('sort_by');
      let rank_type = '';
      if(sortBy == 'price-ascending') {
        rank_type = 'PRICE_ASC';
      } else if(sortBy == 'price-descending') {
        rank_type = 'PRICE_DESC';
      }
      const items = [];
      $('.index-product-item.gird-type').each(function(index) {
        const sku = $(this).data('sku');
        const productId = $(this).data('product-id');
        const varId = $(this).data('var-id');
        const calculatedIndex = (page - 1) * pageSize + (index + 1);
        const productTitle = $(this).data('product-title');
        items.push({
          index: calculatedIndex,
          item_id: `shopify_US_${productId}_${varId}`,
          sku_code: sku,
          item_name: productTitle
        });
      });
      return {
        event: 'view_item_list',
        request_id,
        keyword,
        rank_type,
        ecommerce: {
          item_list_id: "search_result_exposure",
          items
        }
      }
    }

    const handleDataLayerPush = () => {
      dataLayerForm = getDataLayerForm();
      dataLayer.push(dataLayerForm);
    }
    const clickSerrchProduct = () => {
      $('a[datalayer-link]').off('click').on('click', function(event) {
        event.preventDefault();
        const clicked_sku = $(this).data('sku');
        const p_item = dataLayerForm.ecommerce.items.find(item => item.sku_code == clicked_sku);
        if (p_item) {
          const productLayerForm = {
            ...dataLayerForm,
            event: 'select_item',
            ecommerce: {
              item_list_id: "search_result_click",
              items: [p_item]
            }
          }
          dataLayer.push(productLayerForm);
          location.href = $(this).attr('href'); // 跳转到链接的 href
        }
      });
    }

    handleDataLayerPush();  //初始化执行 
    clickSerrchProduct();
    document.addEventListener("search-rerender-success", () => {
      handleDataLayerPush();  //初始化执行 
      clickSerrchProduct();
    });
  })();
</script>
{% schema %}
{
  "name": "Search",
  "class": "shopify-section--main-search",
  "settings": [
    {
      "type": "header",
      "content": "Product results"
    },
    {
      "type": "checkbox",
      "id": "show_sort_by",
      "label": "Show sort by",
      "default": true
    },
    {
      "type": "range",
      "id": "products_per_page",
      "label": "Products per page",
      "min": 8,
      "max": 50,
      "step": 1,
      "default": 10
    },
    {
      "type": "header",
      "content": "Product filters"
    },
    {
      "type": "checkbox",
      "id": "show_filters",
      "label": "Show filters",
      "info": "[Customize filters](/admin/menus)",
      "default": true
    },
    {
      "type": "select",
      "id": "filter_position",
      "label": "Position",
      "options": [
        {
          "value": "always_visible",
          "label": "Always visible"
        },
        {
          "value": "drawer",
          "label": "Drawer"
        }
      ],
      "default": "always_visible"
    },
    {
      "type": "header",
      "content": "Blog post results"
    }
  ]
}
{% endschema %}
